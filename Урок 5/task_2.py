'''
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
'''

from io_func import get_int


def count_parity(n):
    if n <= 0:
        return [0, 0]

    mod = n % 10

    if mod % 2 == 0:
        return list(map(sum, zip([1, 0], count_parity(n//10))))
    else:
        return list(map(sum, zip([0, 1], count_parity(n//10))))


n = get_int("Введите натуральное число")
parity = count_parity(n)
print(f"Четные: {parity[0]} Нечетные: {parity[1]}")
